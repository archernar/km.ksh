# Version 1.83
# (c) Michael Estes, All Rights Reserved
@include /home/mestes/scm/km/km.lib
# include /home/mestes/scm/km/km.lib
BEGIN {
DEBUG_OPTION=0
GLOBAL_OPTION=1
BANNERWIDTH=80
AUTOEXIT=0
KMS=0
OPENCODE=""
OPENBLOCK=""
nMenuItemCounter=0
OPENMENU=0
OPENCOMMENT=0
szOut=""
op = "idifhdkfl"
cmc=1
CM[cmc++]="ps,ps -ef"
CM[cmc++]="ls,ls -l"
CM[cmc++]="ksh,ksh"
CM[cmc++]="df,df"
CM[cmc++]="hostname,hostname"
     sz=""
     for (i=1;i<cmc;i++ ) sz = sz CM[i] ","
     #CM[cmc++]="sc,print " dquote(sz)
hc=1
H[hc++]=""
H[hc++]="KM Help"
H[hc++]="======="
H[hc++]=""
H[hc++]="(h)elp      -  Print KM Help Screen"
H[hc++]=""
H[hc++]="(q)uit      -  Quits KM"
H[hc++]="(e)xit      -  Quits KM"
H[hc++]=""
H[hc++]="(s)how      -  Show scripts"
H[hc++]="(e)xecute   -  Execute scripts"
H[hc++]=""
sz=1
}
/^$/{
     next
}

{
     if (trim($0) == "") next
     if ($0 ~ /^#/) next
     
     if (OPENMENU == 1) {
          OPENMENU=0
     }

     if (( $1 == "COMMENT" ))  {
          DEBUG("OP: " $1 " " $2)
          OPENCOMMENT=1
          next
     }
     if (( $1 == "COMMENTEND" ))  {
          DEBUG("OP: " $1 " " $2)
          OPENCOMMENT=0
          next
     }

     if (OPENCOMMENT==1) next
     
     if (( $1 == "ONELINER" ))  {
          DEBUG("OP: " $1 " " $2)
          OPENCODE=$2
          heapman($2, "# CODE " $2)
          sz = cdr3($0)
          if ( $2 ~ "[.]awk$" ) {
               sub(/^[']/,"", sz)
               sub(/[']$/,"", sz)
          }
          heapman(OPENCODE, sz)
          CODENAMES[$2]=1
          OPENCODE=""
          next
     }
     if (( $1 == "BLOCKEND" ))  {
          DEBUG("OP: " $1 " " $2)
          sz=KMHOME "/scripts/" OPENBLOCK
          print sprintf("%s", heapitem(OPENBLOCK)) > sz
          close(sz)
          OPENBLOCK=""
          next
     }
     if (( $1 == "BLOCK" ))  {
          DEBUG("OP: " $1 " " $2)
          OPENBLOCK = $2
          if (CODENAMES[$2] != "") fatalError(FILENAME, NR, "Duplicate Block Name Defined: " $2)
          CODENAMES[$2]=1
          next
     }
     if (OPENBLOCK != "") {
          DEBUG("OP: " $1 " " $2)
          heapman(OPENBLOCK,$0)
          next
     }

     if (( $1 == "CALL" ))  {
          DEBUG("OP: " $1 " " $2)
          BlockCopy($2, sprintf(getMenuIndexString(),nMenuItemCounter))
          next
     }
     if (( $1 ==  "VERSION" ))  {
          DEBUG("OP: " $1 " " $2)
          VERSION[nMenuItemCounter] = trim($2)
          next
     }
     if (( $1 ==  "DESC" ))  {
          DEBUG("OP: " $1 " " $2)
          DESC[nMenuItemCounter] = cdr($0)
          next
     }
     if (( $1 ==  "SNAME" ))  {
          DEBUG("OP: " $1 " " $2)
          SNAME[nMenuItemCounter] = KMHOME "/scripts/" trim($2)
          next
     }
     if (( $1 ==  "NOGLOBALS" ))  {
          DEBUG("OP: " $1 " " $2)
          GLOBAL_OPTION=0
          next
     }
     if (( $1 ==  "HELP" ))  {
          DEBUG("OP: " $1 " " $2)
          sz=sprintf("%-24s ",LASTMENU) 
          H[hc]=sz " " thecdr($0)
          hc++
          LASTMENU=""
          next
     }

     cmd = ""
     n=split($0,a," ")
     for (i=1;i<=n;i++ ) cmd = cmd a[i] " "
     cmd = ltrim(cmd)
     if (cmd == "NOP") cmd=""
     if (( $1 ==  "MENU" ))  {
          op=$2
          nMenuItemCounter++
          OPENMENU=1
          LASTMENU=op
          heapman(sprintf("HEAPNAME-" getMIS(),nMenuItemCounter),thecdr($0))
          heapman(sprintf(getMIS(),nMenuItemCounter),bangline("-",80))
          heapman(sprintf(getMIS(),nMenuItemCounter), "# this script generated by km v" getVersionString())
          heapman(sprintf(getMIS(),nMenuItemCounter), "# generated on " strftime("%D %T %z",systime()))
          heapman(sprintf(getMIS(),nMenuItemCounter), "#  _              ")
          heapman(sprintf(getMIS(),nMenuItemCounter), "# | | ___ __ ___  ")
          heapman(sprintf(getMIS(),nMenuItemCounter), "# | |/ / '_ ` _ \\ ")
          heapman(sprintf(getMIS(),nMenuItemCounter), "# |   <| | | | | |")
          heapman(sprintf(getMIS(),nMenuItemCounter), "# |_|\\_\\_| |_| |_|")
          heapman(sprintf(getMIS(),nMenuItemCounter), "# km (c) Michael Estes, All Rights Reserved")
          heapman(sprintf(getMIS(),nMenuItemCounter),bangline("-",80))
          heapman(sprintf(getMIS(),nMenuItemCounter),"")
          # heapman(sprintf(getMIS(),nMenuItemCounter),bannerline(BANNERWIDTH,"-",nMenuItemCounter))
          # heapman(sprintf(getMIS(),nMenuItemCounter),bannerline(BANNERWIDTH,"-",thecdr($0)))
          # heapman(sprintf(getMIS(),nMenuItemCounter),bannerline(BANNERWIDTH,"-","#!" getWhichKSH()))
          szMenuName = scriptname(thecdr($0))
          if (GLOBAL_OPTION == 1)
               BlockCopy("GLOBALS", sprintf(getMenuIndexString(),nMenuItemCounter))
          GLOBAL_OPTION=1
     }
     else {
          heapman(sprintf(getMenuIndexString(),nMenuItemCounter), cmd)
     }
}

END {
     MENU_LEVEL = -1
     nMenusThisLevel=0
     for (i=1;i<=nMenuItemCounter;i++ ) {
          if (getMenuLevel(i) > MENU_LEVEL) nMenusThisLevel++
     }
     # Write MenuScripts to files in the KMS folder
     #
     printf("%s", "") > KMHOME "/scripts/kmdesc"
     for (i=1;i<=nMenuItemCounter;i++ ) {
          printf("%s", DESC[i]) >> KMHOME "/scripts/kmdesc"
     }
     close(KMHOME "/scripts/kmdesc")
     for (i=1;i<=nMenuItemCounter;i++ ) {
          sz=scriptname(sprintf("%s",i))
          print "#!" getWhichKSH() > sz
          printf("%s", heapmenuitem(i))  >> sz
          close(sz)
          if (SNAME[i] != "") {
               print "#!" getWhichKSH() > SNAME[i]
               printf("%s", heapmenuitem(i))  >> SNAME[i]
               close(SNAME[i])
               makeRunable(SNAME[i])
               #gitInterface(SNAME[i])
          }
     }
     sz=""
     delim=" \\" 
     print "#!" getWhichKSH()
     print "SCRIPT_VIEW_MODE=0"
     print "PS3=\"\nKM " getVersionString() "> \""
     # print "print \"" "\""
     # print "print \"KM v" getVersionString() "\""
     # print "print \"" "\""
     print "select CHOICE in \\"
     nRenderedMenus=0
FULL_MENU=1
if (FULL_MENU==1)
     for (i=1;i<=nMenuItemCounter;i++ ) {
       if ( VERSION[i] == "" ) VERSION[i]="v1"
       if (getMenuLevel(i) > MENU_LEVEL) {
          nRenderedMenus++
          sz=heapname(sprintf(getMIS(),i))
          sz = sprintf("%s",sz)
          if(nRenderedMenus>=nMenusThisLevel) delim=""
          print "     " squote(sz) delim
       }
     }

     print "do"
     print "case $CHOICE in"
if (FULL_MENU==1)
     for (i=1;i<=nMenuItemCounter;i++ ) {
          if ( VERSION[i] == "" ) VERSION[i]="v1"
          if (getMenuLevel(i) > MENU_LEVEL) {
               sz=heapname(sprintf(getMIS(),i))
               sz = sprintf("%s",sz)
               DEBUG(sz)
               printf("%-12s\n", squote(sz) ")")
               print "if [[ ${SCRIPT_VIEW_MODE} -eq 1 ]]\nthen"
               printf("cat %s\n", scriptname(i))
               printf("else\n")
               printf("%s", heapmenuitem(i))
               print "fi"
               print ";;"
          }
     }
     print "*)"
     print "case ${REPLY} in"
     for (i=1;i<cmc;i++ ) {
          n=split(CM[i],a,",")
          print squote(a[1]) ")     "  a[2] ";  ;;\n" 
     }

     print "'l')              cat /tmp/kmdesc; ;;"
     print "'q')              exit; ;;"
     print "'quit')           exit; ;;"
     print "'exit')           exit; ;;"
     print "'x')              exit; ;;"
     print "'dump')           cat heapdump; ;;"
          SNAME[nMenuItemCounter] = "~/.kmscripts/" trim($2)
     print "'lsc')            ls -l ~/.kmscripts; ;;"
     print "'show')           SCRIPT_VIEW_MODE=1; PS3=\"\nKM " getVersionString() "(show script mode)> \"; ;;"
     print "'s')              SCRIPT_VIEW_MODE=1; PS3=\"\nKM " getVersionString() "(show script mode)> \"; ;;"
     print "'execute')        SCRIPT_VIEW_MODE=0; PS3=\"\nKM " getVersionString() "> \"; ;;"
     print "'e')              SCRIPT_VIEW_MODE=0; PS3=\"\nKM " getVersionString() "> \"; ;;"
     print "'help')"
     for (i=1;i<=hc;i++ ) printf("print \"%s\"\n", H[i])
     print ";;"
     print "'h')"
     for (i=1;i<=hc;i++ ) printf("print \"%s\"\n", H[i])
     print ";;"
     print "'see')"
     print "print -n \"Enter menu item number: \";read var; print \"\""
     print "echo $var"
     print ";;"
     print "esac"
     print ";;"
     print "esac"
     print "done"
}
